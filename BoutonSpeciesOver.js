function BoutonSpeciesOver(){
    d3.csv('villagers.csv',function(d){
        return {
        nom : d.Name,
        espece : d.Species,
        genre : d.Gender,
        personnalite : d.Personality,
        hobbie : d.Hobby,
        signe : d.Sign,
        style : d.Style1,
    } 

    }).then(donnees =>{ 
    // condition pour les petits écrans
    if (ecran_width < 1400 && ecran_height < 850) {
        MonEspaceSVG.transition()
        .attr('height', ecran_height +ecran_height/2)
    }
    //variables utilisées pour les diagrammes circulaire
        const EspeceHobby = d3.group(donnees, d => d.signe, d=> d.hobbie, d => d.espece)
        const EspecePersonnalite = d3.group(donnees, d => d.signe, d=> d.personnalite, d => d.espece)
        const EspeceSign = d3.group(donnees, d => d.signe, d => d.espece)
        const EEspece = d3.groups(donnees, d => d.espece)
        let EspeceListe = []
            for (let i = 0; i < EEspece.length; i++) {
                EspeceListe.push(EEspece[i].shift())
            }
            var Couleur = [
            '#FF1493', '#0000FF', '#FFC0CB', '#2A661F', '#BF7C00', 
            '#20B2AA', '#04D9FF', '#9F0058', '#E5EC17', '#324B76', 
            '#87CEEB', '#A6A6A6', '#800000', '#FFFF80', '#FFFF00',
            '#CFEFEF', '#80A779', '#00FF00', '#FF0000', '#DC143C',
            '#993A6E', '#5C009F', '#9932CC', '#A1009B', '#00FF7F',
            '#FFA500', '#D36BFF', '#FF69B4', '#E2CAF8', '#FFD280',
            '#9F9F00', '#500050', '#1E90FF', '#9FB7FF', '#FCABEA'
            ];
 
        CouleurETEspeceListe = d3.zip(EspeceListe,Couleur)
 
        let milieuX = ecran_width/2 -275
        let milieuY = ecran_height/2
        let posXDiag1 = milieuX + 480 + adaptX1
        let posXDiag2 = milieuX + 665 + adaptX1
        let posXDiag3 = milieuX + 890 - adaptX2
        let posXDiag4 = milieuX + 1075 - adaptX2

        let posYDiag1 = milieuY - 290 
        let posYDiag1_2 = milieuY - 275 

        let posYDiag2 = milieuY -70 
        let posYDiag2_2 = milieuY -55 

        let posYDiag3 = milieuY + 150 
        let posYDiag3_2 = milieuY + 165 

        let posYDiag4 = milieuY + 370 
        let posYDiag4_2 = milieuY + 385 

        const color = d3.scaleOrdinal()
            .domain(EspeceListe)
            .range(Couleur);
        const arcGenerator = d3.arc()
            .outerRadius(90)
            .innerRadius(40)
        const pie = d3.pie()
            .value(d => d[1].length);
            
        // variable pour Diagramme circulaire selon :  SIGNE - EDUCATION - ESPECE
            let SignEspeceEducation = EspeceHobby.get("Capricornus").get("Education")

        // variable pour Diagramme circulaire selon :  SIGNE - FASHION - ESPECE
            let SignEspeceFashion = EspeceHobby.get("Capricornus").get("Fashion")

        // variable pour Diagramme circulaire selon :  SIGNE - FITNESS - ESPECE
            let SignEspeceFitness = EspeceHobby.get("Capricornus").get("Fitness")

        // variable pour Diagramme circulaire selon :  SIGNE - MUSIC - ESPECE
            let SignEspeceMusic = EspeceHobby.get("Capricornus").get("Music")

        // variable pour Diagramme circulaire selon :  SIGNE - NATURE - ESPECE
            let SignEspeceNature = EspeceHobby.get("Capricornus").get("Nature")

        // variable pour Diagramme circulaire selon :  SIGNE - PLAY - ESPECE
            let SignEspecePlay = EspeceHobby.get("Capricornus").get("Play")
        
        // variable pour Diagramme circulaire selon :  SIGNE - BIG SISTER - ESPECE
            let SignEspeceBigsister = EspecePersonnalite.get("Capricornus").get("Big Sister")

        // variable pour Diagramme circulaire selon :  SIGNE - CRANKY - ESPECE
            let SignEspeceCranky = EspecePersonnalite.get("Capricornus").get("Cranky")
        
        // variable pour Diagramme circulaire selon :  SIGNE - JOCK - ESPECE
            let SignEspeceJock = EspecePersonnalite.get("Capricornus").get("Jock")

        // variable pour Diagramme circulaire selon :  SIGNE - LAZY - ESPECE
            let SignEspeceLazy = EspecePersonnalite.get("Capricornus").get("Lazy")

        // variable pour Diagramme circulaire selon :  SIGNE - NORMAL - ESPECE
            let SignEspeceNormal = EspecePersonnalite.get("Capricornus").get("Normal")  

        // variable pour Diagramme circulaire selon :  SIGNE -  PEPY - ESPECE
            let SignEspecePepy = EspecePersonnalite.get("Capricornus").get("Peppy")
          
        // variable pour Diagramme circulaire selon :  SIGNE -  SMUG - ESPECE
            let SignEspeceSmug = EspecePersonnalite.get("Capricornus").get("Smug")     
            
        // variable pour Diagramme circulaire selon :  SIGNE -  SNOOTY - ESPECE
            let SignEspeceSnooty = EspecePersonnalite.get("Capricornus").get("Snooty") 

        // fonction pour les variations d'ID dansles fromages 
            function applyIDcorrectely(PieData) {
                for (let i = 0; i < PieData.length; i++) {
                    PieData[i].index=i 
                }
            }   
        if (QuelMoisSommesNous == 1) {
            // les diagrammes circulaires
            SignEspeceEducation = EspeceHobby.get("Sagittarius").get("Education")
            SignEspeceFashion = EspeceHobby.get("Sagittarius").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Sagittarius").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Sagittarius").get("Music")
            SignEspeceNature = EspeceHobby.get("Sagittarius").get("Nature")
            SignEspecePlay = EspeceHobby.get("Sagittarius").get("Play")
            SignEspeceBigsister = []
                let Croix = MonEspaceSVG.append('image')
                .attr('id', 'Croix')
                .attr('xlink:href', 'Croix.svg')
                .attr('width', 130)
                .attr('height', 130)
                .attr('x', posXDiag3 -60+adaptXforSpecie)
                .attr('y', posYDiag1 -70 + adaptY2) 
                .attr("opacity", 0)
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.7)
            SignEspeceCranky = EspecePersonnalite.get("Sagittarius").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Sagittarius").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Sagittarius").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Sagittarius").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Sagittarius").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Sagittarius").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Sagittarius").get("Snooty")

            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Sagittarius")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+90 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY+190 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+90 + 70)*addaptation) +addaptationX)
                .attr('y', ((milieuY+190 + 50)*addaptation) +addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " + "Wolves" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX+60 -EspeceSignSignArrayOrdrePlus[1][1].length*5 )*addaptation)+addaptationX)
                .attr('y', ((milieuY-190 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX+60 + 60)*addaptation)+addaptationX)
                .attr('y', ((milieuY-190 + 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")             
        } else if(QuelMoisSommesNous == 2){
            SignEspeceEducation = EspeceHobby.get("Capricornus").get("Education")
            SignEspeceFashion = EspeceHobby.get("Capricornus").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Capricornus").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Capricornus").get("Music")
            SignEspeceNature = EspeceHobby.get("Capricornus").get("Nature")
            SignEspecePlay = EspeceHobby.get("Capricornus").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Capricornus").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Capricornus").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Capricornus").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Capricornus").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Capricornus").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Capricornus").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Capricornus").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Capricornus").get("Snooty")   

            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Capricornus")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+90 -90 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX+add10)
                .attr('y', ((milieuY+190 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+90 -90 + 70)*addaptation)+addaptationX+add10)
                .attr('y', ((milieuY+190 + 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX-40 -90 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX+add10)
                .attr('y', ((milieuY-190 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX-40 -90 + 60)*addaptation)+addaptationX+add10)
                .attr('y', ((milieuY-190 + 50)*addaptation)+addaptationY )    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")     

            etoile_rose.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('x', ((milieuX-440-90 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationX +add10)
                .attr('y', ((milieuY-230 -5 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteRose = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteRose")
                .attr('x', ((milieuX-440 -40)*addaptation)+addaptationX+add10)
                .attr('y', ((milieuY-230)*addaptation)+addaptationY )    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[2][1].length + " " + EspeceSignSignArrayOrdrePlus[2][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")   
        } else if(QuelMoisSommesNous == 3){ 
            SignEspeceEducation = EspeceHobby.get("Aquarius").get("Education")
            SignEspeceFashion = EspeceHobby.get("Aquarius").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Aquarius").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Aquarius").get("Music")
            SignEspeceNature = EspeceHobby.get("Aquarius").get("Nature")
            SignEspecePlay = EspeceHobby.get("Aquarius").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Aquarius").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Aquarius").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Aquarius").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Aquarius").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Aquarius").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Aquarius").get("Peppy")
            SignEspeceSmug = []  
                let Croix = MonEspaceSVG.append('image')
                .attr('id', 'Croix')
                .attr('xlink:href', 'Croix.svg')
                .attr('width', 130)
                .attr('height', 130)
                .attr('x', posXDiag4 -60)
                .attr('y', posYDiag3 -70-adaptYforSpecie-adaptYforSpecie/2) 
                .attr("opacity", 0)  
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.7)
            SignEspeceSnooty = EspecePersonnalite.get("Aquarius").get("Snooty")

            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Aquarius")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+180 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY+40 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+180 + 70)*addaptation)+addaptationX)
                .attr('y', ((milieuY+40 + 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX+150 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX )
                .attr('y', ((milieuY-150 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX+150 + 60)*addaptation)+addaptationX)
                .attr('y', ((milieuY-150 + 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")     

            etoile_rose.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('x', ((milieuX-300 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationX )
                .attr('y', ((milieuY-90 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteRose = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteRose")
                .attr('x', ((milieuX-300)*addaptation)+addaptationX)
                .attr('y', ((milieuY-90-20)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[2][1].length + " " + EspeceSignSignArrayOrdrePlus[2][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_vert.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('x', ((milieuX-130 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-300 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteVert = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteVert")
                .attr('x', ((milieuX-130 +60)*addaptation)+addaptationX)
                .attr('y', ((milieuY-300)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[3][1].length + " " + EspeceSignSignArrayOrdrePlus[3][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

        } else if(QuelMoisSommesNous == 4){
            SignEspeceEducation = EspeceHobby.get("Pisces").get("Education")
            SignEspeceFashion = EspeceHobby.get("Pisces").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Pisces").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Pisces").get("Music")
            SignEspeceNature = EspeceHobby.get("Pisces").get("Nature")
            SignEspecePlay = EspeceHobby.get("Pisces").get("Play")
            SignEspeceBigsister = []
                let Croix = MonEspaceSVG.append('image')
                .attr('id', 'Croix')
                .attr('xlink:href', 'Croix.svg')
                .attr('width', 130)
                .attr('height', 130)
                .attr('x', posXDiag3 -60+adaptXforSpecie)
                .attr('y', posYDiag1 -70 + adaptY2) 
                .attr("opacity", 0)  
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.7)
            SignEspeceCranky = EspecePersonnalite.get("Pisces").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Pisces").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Pisces").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Pisces").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Pisces").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Pisces").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Pisces").get("Snooty") 

             //déplacement des étoiles 
             const EspeceSignSign = EspeceSign.get("Pisces")
             let EspeceSignSignArray = Array.from(EspeceSignSign)
             let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
             EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)
 
             etoile_jaune.transition()
                 .duration(1000) 
                 .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                 .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                 .attr('x', ((milieuX+40 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                 .attr('y', ((milieuY+230 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   
 
             let SpecieTexteJaune = MonEspaceSVG.append('text')
                 .attr('id', "SpecieTexteJaune")
                 .attr('x', ((milieuX+40 + 70)*addaptation)+addaptationX)
                 .attr('y', ((milieuY+230 + 50)*addaptation)+addaptationY)    
                 .attr('fill', "white")
                 .attr('font-family', "AnimalCrossing")
                 .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                 .attr('opacity', "0") 
                 .transition() 
                 .duration(1000)
                 .attr('opacity', "0.5") 
 
             etoile_bleu.transition()
                 .duration(1000) 
                 .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                 .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                 .attr('x', ((milieuX+220 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX)
                 .attr('y', ((milieuY-140 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                 
             let SpecieTexteBleu = MonEspaceSVG.append('text')
                 .attr('id', "SpecieTexteBleu")
                 .attr('x', ((milieuX+220 + 60)*addaptation)+addaptationX)
                 .attr('y', ((milieuY-140 + 50)*addaptation)+addaptationY)    
                 .attr('fill', "white")
                 .attr('font-family', "AnimalCrossing")
                 .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                 .attr('opacity', "0") 
                 .transition() 
                 .duration(1000)
                 .attr('opacity', "0.5")     

        } else if(QuelMoisSommesNous == 5){  
            SignEspeceEducation = EspeceHobby.get("Aries").get("Education")
            SignEspeceFashion = EspeceHobby.get("Aries").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Aries").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Aries").get("Music")
            SignEspeceNature = EspeceHobby.get("Aries").get("Nature")
            SignEspecePlay = EspeceHobby.get("Aries").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Aries").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Aries").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Aries").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Aries").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Aries").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Aries").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Aries").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Aries").get("Snooty")

            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Aries")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+ 130-150 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-220 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 130-150 + 70)*addaptation)+addaptationX)
                .attr('y', ((milieuY-220+ 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX+150 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-250 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX+150 + 60 -10)*addaptation)+addaptationX)
                .attr('y', ((milieuY-250 + 50 -50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")     

            etoile_rose.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('x', ((milieuX-450 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationX )
                .attr('y', ((milieuY+2 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteRose = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteRose")
                .attr('x', ((milieuX-450)*addaptation)+addaptationX)
                .attr('y', ((milieuY+2 -25)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[2][1].length + " " + EspeceSignSignArrayOrdrePlus[2][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_vert.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('x', ((milieuX+ 375-150 -EspeceSignSignArrayOrdrePlus[2][1].length*5 )*addaptation)+addaptationX)
                .attr('y', ((milieuY-190 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteVert = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteVert")
                .attr('x', ((milieuX+ 375-150 +50)*addaptation)+addaptationX )
                .attr('y', ((milieuY-190)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[3][1].length + " " + EspeceSignSignArrayOrdrePlus[3][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 
          
        } else if(QuelMoisSommesNous == 6){ 
            SignEspeceEducation = EspeceHobby.get("Taurus").get("Education")
            SignEspeceFashion = EspeceHobby.get("Taurus").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Taurus").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Taurus").get("Music")
            SignEspeceNature = EspeceHobby.get("Taurus").get("Nature")
            SignEspecePlay = EspeceHobby.get("Taurus").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Taurus").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Taurus").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Taurus").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Taurus").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Taurus").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Taurus").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Taurus").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Taurus").get("Snooty") 
            
            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Taurus")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
            .duration(1000) 
            .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
            .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
            .attr('x', ((milieuX+ 65 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
            .attr('y', ((milieuY+85 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 65 + 70 -20)*addaptation)+addaptationX)
                .attr('y', ((milieuY+85 + 50 - 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 
        } else if(QuelMoisSommesNous == 7){
            SignEspeceEducation = EspeceHobby.get("Gemini").get("Education")
            SignEspeceFashion = EspeceHobby.get("Gemini").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Gemini").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Gemini").get("Music")
            SignEspeceNature = EspeceHobby.get("Gemini").get("Nature")
            SignEspecePlay = EspeceHobby.get("Gemini").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Gemini").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Gemini").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Gemini").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Gemini").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Gemini").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Gemini").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Gemini").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Gemini").get("Snooty") 

            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Gemini")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+ 120 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY+65 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 120 + 70 -10)*addaptation)+addaptationX)
                .attr('y', ((milieuY+65 + 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX+100 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-340 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX+100 + 60 -10)*addaptation)+addaptationX)
                .attr('y', ((milieuY-340 + 50 -50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")     

        } else if(QuelMoisSommesNous == 8){ 
            SignEspeceEducation = EspeceHobby.get("Cancer").get("Education")
            SignEspeceFashion = EspeceHobby.get("Cancer").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Cancer").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Cancer").get("Music")
            SignEspeceNature = EspeceHobby.get("Cancer").get("Nature")
            SignEspecePlay = EspeceHobby.get("Cancer").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Cancer").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Cancer").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Cancer").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Cancer").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Cancer").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Cancer").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Cancer").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Cancer").get("Snooty")
        
            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Cancer")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+ 145 -10 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY+65 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 145 + 70 -10)*addaptation)+addaptationX)
                .attr('y', ((milieuY+65 + 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX-60 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-380 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX-60 + 50)*addaptation)+addaptationX)
                .attr('y', ((milieuY-380)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")  
         
        } else if(QuelMoisSommesNous == 9){ 
            SignEspeceEducation = EspeceHobby.get("Leo").get("Education")
            SignEspeceFashion = EspeceHobby.get("Leo").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Leo").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Leo").get("Music")
            SignEspeceNature = EspeceHobby.get("Leo").get("Nature")
            SignEspecePlay = EspeceHobby.get("Leo").get("Play")
            SignEspeceBigsister = []
            let Croix = MonEspaceSVG.append('image')
            .attr('id', 'Croix')
            .attr('xlink:href', 'Croix.svg')
            .attr('width', 130)
            .attr('height', 130)
            .attr('x', posXDiag3 -60+adaptXforSpecie)
            .attr('y', posYDiag1 -70 + adaptY2) 
            .attr("opacity", 0)  
            .transition()
                .duration(1050) 
                .attr("opacity", 0.7)
            SignEspeceCranky = EspecePersonnalite.get("Leo").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Leo").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Leo").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Leo").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Leo").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Leo").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Leo").get("Snooty") 
            
            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Leo")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+228 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY+259 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 228 + 70)*addaptation)+addaptationX)
                .attr('y', ((milieuY+259 + 50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX-295 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-345 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX-295 + 60 -10)*addaptation)+addaptationX)
                .attr('y', ((milieuY-345 + 50 -50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")     

            etoile_rose.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('x', ((milieuX-140 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-145 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteRose = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteRose")
                .attr('x', ((milieuX-140)*addaptation)+addaptationX)
                .attr('y', ((milieuY-145 -25)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[2][1].length + " " + EspeceSignSignArrayOrdrePlus[2][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

        } else if(QuelMoisSommesNous == 10){
            SignEspeceEducation = EspeceHobby.get("Virgo").get("Education")
            SignEspeceFashion = EspeceHobby.get("Virgo").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Virgo").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Virgo").get("Music")
            SignEspeceNature = EspeceHobby.get("Virgo").get("Nature")
            SignEspecePlay = EspeceHobby.get("Virgo").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Virgo").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Virgo").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Virgo").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Virgo").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Virgo").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Virgo").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Virgo").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Virgo").get("Snooty") 

            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Virgo")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+42 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY+20 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 42 + 70 -20)*addaptation)+addaptationX)
                .attr('y', ((milieuY+20 + 50 -50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX+115 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-270 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX+115 + 60 -10)*addaptation)+addaptationX)
                .attr('y', ((milieuY-270 + 50 -50)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")     
   
        } else if(QuelMoisSommesNous == 11){ 
            SignEspeceEducation = EspeceHobby.get("Libra").get("Education")
            SignEspeceFashion = EspeceHobby.get("Libra").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Libra").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Libra").get("Music")
            SignEspeceNature = EspeceHobby.get("Libra").get("Nature")
            SignEspecePlay = EspeceHobby.get("Libra").get("Play")
            SignEspeceBigsister = EspecePersonnalite.get("Libra").get("Big Sister")
            SignEspeceCranky = EspecePersonnalite.get("Libra").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Libra").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Libra").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Libra").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Libra").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Libra").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Libra").get("Snooty")
            
            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Libra")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
                .attr('x', ((milieuX+ 32 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY -85 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 32 + 50)*addaptation)+addaptationX)
                .attr('y', ((milieuY-85)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

            etoile_bleu.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[1][1].length*10)*addaptation)
                .attr('x', ((milieuX+166 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY+40 -EspeceSignSignArrayOrdrePlus[1][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteBleu = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteBleu")
                .attr('x', ((milieuX+166 + 60 -10)*addaptation)+addaptationX)
                .attr('y', ((milieuY+40 + 50 -55)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[1][1].length + " " + EspeceSignSignArrayOrdrePlus[1][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5")     

            etoile_rose.transition()
                .duration(1000) 
                .attr('height', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('width', (50 + EspeceSignSignArrayOrdrePlus[2][1].length*10)*addaptation)
                .attr('x', ((milieuX-152 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationX)
                .attr('y', ((milieuY-225 -EspeceSignSignArrayOrdrePlus[2][1].length*5)*addaptation)+addaptationY) 
                
            let SpecieTexteRose = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteRose")
                .attr('x', ((milieuX-152)*addaptation)+addaptationX)
                .attr('y', ((milieuY-225 - 25)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[2][1].length + " " + EspeceSignSignArrayOrdrePlus[2][0] +"s" )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 

        } else if(QuelMoisSommesNous == 12){
            SignEspeceEducation = EspeceHobby.get("Scorpio").get("Education")
            SignEspeceFashion = EspeceHobby.get("Scorpio").get("Fashion")
            SignEspeceFitness = EspeceHobby.get("Scorpio").get("Fitness")
            SignEspeceMusic = EspeceHobby.get("Scorpio").get("Music")
            SignEspeceNature = EspeceHobby.get("Scorpio").get("Nature")
            SignEspecePlay = EspeceHobby.get("Scorpio").get("Play")
            SignEspeceBigsister = []
            let Croix = MonEspaceSVG.append('image')
            .attr('id', 'Croix')
            .attr('xlink:href', 'Croix.svg')
            .attr('width', 130)
            .attr('height', 130)
            .attr('x', posXDiag3 -60+adaptXforSpecie)
            .attr('y', posYDiag1 -70 + adaptY2) 
            .attr("opacity", 0)  
            .transition()
                .duration(1050) 
                .attr("opacity", 0.7)
            SignEspeceCranky = EspecePersonnalite.get("Scorpio").get("Cranky")
            SignEspeceJock = EspecePersonnalite.get("Scorpio").get("Jock")
            SignEspeceLazy = EspecePersonnalite.get("Scorpio").get("Lazy")
            SignEspeceNormal = EspecePersonnalite.get("Scorpio").get("Normal")  
            SignEspecePepy = EspecePersonnalite.get("Scorpio").get("Peppy")
            SignEspeceSmug = EspecePersonnalite.get("Scorpio").get("Smug")     
            SignEspeceSnooty = EspecePersonnalite.get("Scorpio").get("Snooty")
            
            //déplacement des étoiles 
            const EspeceSignSign = EspeceSign.get("Scorpio")
            let EspeceSignSignArray = Array.from(EspeceSignSign)
            let EspeceSignSignArrayOrdreMoins = d3.sort(EspeceSignSignArray, (d) => d[1].length)
            EspeceSignSignArrayOrdrePlus=  d3.reverse(EspeceSignSignArrayOrdreMoins)

            etoile_jaune.transition()
            .duration(1000) 
            .attr('height', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
            .attr('width', (50 + EspeceSignSignArrayOrdrePlus[0][1].length*10)*addaptation)
            .attr('x', ((milieuX+ 32 -200 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationX)
            .attr('y', ((milieuY -105 -EspeceSignSignArrayOrdrePlus[0][1].length*5)*addaptation)+addaptationY)   

            let SpecieTexteJaune = MonEspaceSVG.append('text')
                .attr('id', "SpecieTexteJaune")
                .attr('x', ((milieuX+ 32 -200 + 50)*addaptation)+addaptationX)
                .attr('y', ((milieuY-105)*addaptation)+addaptationY)    
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .text(EspeceSignSignArrayOrdrePlus[0][1].length + " " +  EspeceSignSignArrayOrdrePlus[0][0] +"s"  )
                .attr('opacity', "0") 
                .transition() 
                .duration(1000)
                .attr('opacity', "0.5") 
      
console.log(EspeceSignSignArrayOrdrePlus)     
        } 
        
    // apparition des diagrammes circulaires
    const TitreHobbies = MonEspaceSVG.append('text')
        .text("Hobbies") 
        .attr("id", `TitreHobbies`)
        .attr('x', posXDiag1 +50)
        .attr('y', posYDiag1 -150+adaptY1)
        .attr('fill', "white")
        .attr('opacity', "0")
        .attr('font-size', "30")
        .attr('font-family', "AnimalCrossing")
        .attr("opacity", 0)
        .transition()
            .duration(1050) 
            .attr("opacity", 0.5)
    
    const TitrePersonnalities = MonEspaceSVG.append('text')
        .text("Personalities") 
        .attr("id", `TitrePersonnalities`)
        .attr('x', posXDiag1 + 420+adaptXforSpecie+adaptXforSpecie/2)
        .attr('y', posYDiag1 + adaptY2-150)
        .attr('fill', "white")
        .attr('opacity', "0")
        .attr('font-size', "30")
        .attr('font-family', "AnimalCrossing")
        .attr("opacity", 0)
        .transition()
            .duration(1050) 
            .attr("opacity", 0.5)

        // Diagramme circulaire selon :  SIGNE - EDUCATION - ESPECE
        const TitreEducation = MonEspaceSVG.append('text')
        .text("Education") 
        .attr("id", `TitreEducation`)
        .attr('x', posXDiag1-50)
        .attr('y', posYDiag1-102+adaptY1)
        .attr('fill', "white")
        .attr('opacity', "0")
        .attr('font-size', "25")
        .attr('font-family', "AnimalCrossing")
        .attr("opacity", 0)
        .transition()
            .duration(1050) 
            .attr("opacity", 0.5)   

            let SignEspeceEducationArray = Array.from(SignEspeceEducation)
            SignEspeceEducationArray.sort(d3.ascending)
            let pieDataEducation = pie(SignEspeceEducationArray) 
            let EducationSignCompte = 0
            applyIDcorrectely(pieDataEducation)
            for (let i = 0; i < pieDataEducation.length; i++) {
                    EducationSignCompte += pieDataEducation[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataEducation)
                    .enter()
                    .append("path")
                    .attr("id", d => `EducationFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("opacity", 0)
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform",`translate(${posXDiag1},${posYDiag1+adaptY1})`)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceEducation = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataEducation)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `EducationFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag1},${posYDiag1+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsCompteEducation = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataEducation)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + EducationSignCompte) 
                    .attr("id", d => `EducationFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag1},${posYDiag1_2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        // Diagramme circulaire selon :  SIGNE - FASHION - ESPECE
            const TitreFashion = MonEspaceSVG.append('text')
            .text("Fashion") 
            .attr("id", `TitreFashion`)
            .attr('x', posXDiag1-40)
            .attr('y', posYDiag2-102+adaptY1)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)   

            let SignEspeceFashionArray = Array.from(SignEspeceFashion)
            SignEspeceFashionArray.sort(d3.ascending)
            let pieDataFashion = pie(SignEspeceFashionArray)  
            let FashionSignCompte = 0
            applyIDcorrectely(pieDataFashion)
            for (let i = 0; i < pieDataFashion.length; i++) {
                    FashionSignCompte += pieDataFashion[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataFashion)
                    .enter()
                    .append("path")
                    .attr("id", d => `FashionFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag1},${posYDiag2+adaptY1})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceFashion = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataFashion)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `FashionFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag1},${posYDiag2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteFasion = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataFashion)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + FashionSignCompte) 
                    .attr("id", d => `FashionFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag1},${posYDiag2_2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)   

        //Diagramme circulaire selon :  SIGNE - FITNESS - ESPECE
            const TitreFitness = MonEspaceSVG.append('text')
            .text("Fitness") 
            .attr("id", `TitreFitness`)
            .attr('x', posXDiag1-40)
            .attr('y', posYDiag3-102+adaptY1)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)   

            let SignEspeceFitnessArray = Array.from(SignEspeceFitness)
            SignEspeceFitnessArray.sort(d3.ascending)
            let pieDataFitness = pie(SignEspeceFitnessArray)  
            let FitnessSignCompte = 0
            applyIDcorrectely(pieDataFitness)
            for (let i = 0; i < pieDataFitness.length; i++) {
                FitnessSignCompte += pieDataFitness[i].value 
            }

            MonEspaceSVG.selectAll("arc")
                .data(pieDataFitness)
                .enter()
                .append("path")
                .attr("id", d => `FitnessFromage${d.index}`)
                .attr("d", arcGenerator)
                .attr("fill", (d, i) => color(i))
                .attr("stroke", "white")
                .attr("stroke-width", 1)
                .attr("transform", `translate(${posXDiag1},${posYDiag3+adaptY1})`)
                .attr("opacity", 0)
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.8)

            const labelsEspeceFitness = MonEspaceSVG.selectAll(".label-espece")
                .data(pieDataFitness)
                .enter()
                .append("text")
                .text((d) =>  d.data[0]) 
                .attr("id", d => `FitnessFromageText1${d.index}`)
                .attr("transform", (d) => `translate(${posXDiag1},${posYDiag3+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .style("text-anchor", "middle") 
                .style("font-size", "13px")
                .attr("opacity", 0)
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.8) 

            const labelsCompteFitness = MonEspaceSVG.selectAll(".label-Compte")
                .data(pieDataFitness)
                .enter()
                .append("text")
                .text((d) =>  d.value + "/" + FitnessSignCompte) 
                .attr("id", d => `FitnessFromageText2${d.index}`)
                .attr("transform", (d) => `translate(${posXDiag1},${posYDiag3_2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .style("text-anchor", "middle") 
                .style("font-size", "13px")
                .attr("opacity", 0)
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.8)  

        //Diagramme circulaire selon :  SIGNE - MUSIC - ESPECE
            const TitreMusic = MonEspaceSVG.append('text')
            .text("Music") 
            .attr("id", `TitreMusic`)
            .attr('x', posXDiag2-30)
            .attr('y', posYDiag1-102+adaptY1)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)   

            let SignEspeceMusicArray = Array.from(SignEspeceMusic)
            SignEspeceMusicArray.sort(d3.ascending)
            let pieDataMusic = pie(SignEspeceMusicArray)  
            let MusicSignCompte = 0
            applyIDcorrectely(pieDataMusic)
            for (let i = 0; i < pieDataMusic.length; i++) {
            MusicSignCompte += pieDataMusic[i].value 
            }

            MonEspaceSVG.selectAll("arc")
                .data(pieDataMusic)
                .enter()
                .append("path")
                .attr("id", d => `MusicFromage${d.index}`)
                .attr("d", arcGenerator)
                .attr("fill", (d, i) => color(i))
                .attr("stroke", "white")
                .attr("stroke-width", 1)
                .attr("transform", `translate(${posXDiag2},${posYDiag1+adaptY1})`)
                .attr("opacity", 0)
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.8)

            const labelsEspeceMusic = MonEspaceSVG.selectAll(".label-espece")
                .data(pieDataMusic)
                .enter()
                .append("text")
                .text((d) =>  d.data[0]) 
                .attr("id", d => `MusicFromageText1${d.index}`)
                .attr("transform", (d) => `translate(${posXDiag2},${posYDiag1+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .style("text-anchor", "middle") 
                .style("font-size", "13px")
                .attr("opacity", 0)
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.8) 

            const labelsCompteMusic = MonEspaceSVG.selectAll(".label-Compte")
                .data(pieDataMusic)
                .enter()
                .append("text")
                .text((d) =>  d.value + "/" + MusicSignCompte) 
                .attr("id", d => `MusicFromageText2${d.index}`)
                .attr("transform", (d) => `translate(${posXDiag2},${posYDiag1_2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                .attr('fill', "white")
                .attr('font-family', "AnimalCrossing")
                .style("text-anchor", "middle") 
                .style("font-size", "13px")
                .attr("opacity", 0)
                .transition()
                    .duration(1050) 
                    .attr("opacity", 0.8)  

        //Diagramme circulaire selon :  SIGNE - NATURE - ESPECE
        const TitreNature = MonEspaceSVG.append('text')
            .text("Nature") 
            .attr("id", `TitreNature`)
            .attr('x', posXDiag2-30)
            .attr('y', posYDiag2-102+adaptY1)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)

            let SignEspeceNatureArray = Array.from(SignEspeceNature)
            SignEspeceNatureArray.sort(d3.ascending)
            let pieDataNature = pie(SignEspeceNatureArray)  
            let NatureSignCompte = 0
            applyIDcorrectely(pieDataNature)
            for (let i = 0; i < pieDataNature.length; i++) {
                NatureSignCompte += pieDataNature[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataNature)
                    .enter()
                    .append("path")
                    .attr("id", d => `NatureFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform",  `translate(${posXDiag2},${posYDiag2+adaptY1})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceNature = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataNature)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `NatureFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag2},${posYDiag2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteNature = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataNature)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + NatureSignCompte) 
                    .attr("id", d => `NatureFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag2},${posYDiag2_2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)  

        //Diagramme circulaire selon :  SIGNE - PLAY - ESPECE
        const TitrePlay = MonEspaceSVG.append('text')
            .text("Play") 
            .attr("id", `TitrePlay`)
            .attr('x', posXDiag2-30)
            .attr('y', posYDiag3-102+adaptY1)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)

            let SignEspecePlayArray = Array.from(SignEspecePlay)
            SignEspecePlayArray.sort(d3.ascending)
            let pieDataPlay = pie(SignEspecePlayArray)  
            let PlaySignCompte = 0
            applyIDcorrectely(pieDataPlay)
            for (let i = 0; i < pieDataPlay.length; i++) {
                PlaySignCompte += pieDataPlay[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataPlay)
                    .enter()
                    .append("path")
                    .attr("id", d => `PlayFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform",  `translate(${posXDiag2},${posYDiag3+adaptY1})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspecePlay = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataPlay)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `PlayFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag2},${posYDiag3+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsComptePlay = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataPlay)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + PlaySignCompte) 
                    .attr("id", d => `PlayFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag2},${posYDiag3_2+adaptY1}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        //Diagramme circulaire selon :  SIGNE - BIG SISTER - ESPECE
        const TitreBigSister = MonEspaceSVG.append('text')
            .text("Big Sister") 
            .attr("id", `TitreBigSister`)
            .attr('x', posXDiag3-30 +adaptXforSpecie)
            .attr('y', posYDiag1-102 + adaptY2)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)

            let SignEspeceBigSisterArray = Array.from(SignEspeceBigsister)
            SignEspeceBigSisterArray.sort(d3.ascending)
            let pieDataBigSister = pie(SignEspeceBigSisterArray)  
            let BigSisterSignCompte = 0
            applyIDcorrectely(pieDataBigSister)
            for (let i = 0; i < pieDataBigSister.length; i++) {
                BigSisterSignCompte += pieDataBigSister[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataBigSister)
                    .enter()
                    .append("path")
                    .attr("id", d => `BigSisterFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform",  `translate(${posXDiag3+adaptXforSpecie},${posYDiag1+adaptY2})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceBigSister = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataBigSister)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `BigSisterFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3+adaptXforSpecie},${posYDiag1+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteBigSister = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataBigSister)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + BigSisterSignCompte) 
                    .attr("id", d => `BigSisterFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3+adaptXforSpecie},${posYDiag1_2+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)
                
        //Diagramme circulaire selon :  SIGNE - CRANKY - ESPECE
        const TitreCranky = MonEspaceSVG.append('text')
            .text("Cranky") 
            .attr("id", `TitreCranky`)
            .attr('x', posXDiag3-30+adaptXforSpecie)
            .attr('y', posYDiag2-102+adaptY2)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)

            let SignEspeceCrankyArray = Array.from(SignEspeceCranky)
            SignEspeceCrankyArray.sort(d3.ascending)
            let pieDataCranky = pie(SignEspeceCrankyArray)  
            let CrankySignCompte = 0
            applyIDcorrectely(pieDataCranky)
            for (let i = 0; i < pieDataCranky.length; i++) {
                CrankySignCompte += pieDataCranky[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataCranky)
                    .enter()
                    .append("path")
                    .attr("id", d => `CrankyFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag3+adaptXforSpecie},${posYDiag2+adaptY2})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceCranky = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataCranky)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `CrankyFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3+adaptXforSpecie},${posYDiag2+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteBigCranky = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataCranky)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + CrankySignCompte) 
                    .attr("id", d => `CrankyFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3+adaptXforSpecie},${posYDiag2_2+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        //Diagramme circulaire selon :  SIGNE - JOCK - ESPECE
        const TitreJock = MonEspaceSVG.append('text')
            .text("Jock") 
            .attr("id", `TitreJock`)
            .attr('x', posXDiag3-30)
            .attr('y', posYDiag3-102+adaptY2+adaptYforSpecie+adaptYforSpecie)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)

            let SignEspeceJockArray = Array.from(SignEspeceJock)
            SignEspeceJockArray.sort(d3.ascending)
            let pieDataJock = pie(SignEspeceJockArray)  
            let JockSignCompte = 0
            applyIDcorrectely(pieDataJock)
            for (let i = 0; i < pieDataJock.length; i++) {
                JockSignCompte += pieDataJock[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataJock)
                    .enter()
                    .append("path")
                    .attr("id", d => `JockFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag3},${posYDiag3+adaptY2+adaptYforSpecie+adaptYforSpecie})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceJock = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataJock)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `JockFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3},${posYDiag3+adaptY2+adaptYforSpecie+adaptYforSpecie})translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteJock = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataJock)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + JockSignCompte) 
                    .attr("id", d => `JockFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3},${posYDiag3_2+adaptY2+adaptYforSpecie+adaptYforSpecie}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        //Diagramme circulaire selon :  SIGNE - LAZY - ESPECE
        const TitreLazy = MonEspaceSVG.append('text')
            .text("Lazy") 
            .attr("id", `TitreLazy`)
            .attr('x', posXDiag3-30)
            .attr('y', posYDiag4-102+adaptY2+adaptYforSpecie+adaptYforSpecie)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)
               
            let SignEspeceLazyArray = Array.from(SignEspeceLazy)
            SignEspeceLazyArray.sort(d3.ascending)
            let pieDataLazy = pie(SignEspeceLazyArray)  
            let LazySignCompte = 0
            applyIDcorrectely(pieDataLazy)
            for (let i = 0; i < pieDataLazy.length; i++) {
                LazySignCompte += pieDataLazy[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataLazy)
                    .enter()
                    .append("path")
                    .attr("id", d => `LazyFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag3},${posYDiag4+adaptY2+adaptYforSpecie+adaptYforSpecie})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceLazy = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataLazy)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `LazyFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3},${posYDiag4+adaptY2+adaptYforSpecie+adaptYforSpecie}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteLazy = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataLazy)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + LazySignCompte) 
                    .attr("id", d => `LazyFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag3},${posYDiag4_2+adaptY2+adaptYforSpecie+adaptYforSpecie}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        //Diagramme circulaire selon :  SIGNE - NORMAL - ESPECE
        const TitreNormal = MonEspaceSVG.append('text')
            .text("Normal") 
            .attr("id", `TitreNormal`)
            .attr('x', posXDiag4-30+adaptXforSpecie)
            .attr('y', posYDiag1-102 + adaptY2)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)
      
            let SignEspeceNormalArray = Array.from(SignEspeceNormal)
            SignEspeceNormalArray.sort(d3.ascending)
            let pieDataNormal = pie(SignEspeceNormalArray)  
            let NormalSignCompte = 0
            applyIDcorrectely(pieDataNormal)
            for (let i = 0; i < pieDataNormal.length; i++) {
                NormalSignCompte += pieDataNormal[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataNormal)
                    .enter()
                    .append("path")
                    .attr("id", d => `NormalFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag4+adaptXforSpecie},${posYDiag1+adaptY2})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceNormal = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataNormal)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `NormalFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4+adaptXforSpecie},${posYDiag1+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteNormal = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataNormal)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + NormalSignCompte) 
                    .attr("id", d => `NormalFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4+adaptXforSpecie},${posYDiag1_2+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        //Diagramme circulaire selon :  SIGNE - PEPPY - ESPECE     
        const TitrePeppy = MonEspaceSVG.append('text')
            .text("Peppy") 
            .attr("id", `TitrePeppy`)
            .attr('x', posXDiag4-30+adaptXforSpecie)
            .attr('y', posYDiag2-102+adaptY2)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)
      
            let SignEspecePepyArray = Array.from(SignEspecePepy)
            SignEspecePepyArray.sort(d3.ascending)
            let pieDataPeppy = pie(SignEspecePepyArray)  
            let PeppySignCompte = 0
            applyIDcorrectely(pieDataPeppy)
            for (let i = 0; i < pieDataPeppy.length; i++) {
                PeppySignCompte += pieDataPeppy[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataPeppy)
                    .enter()
                    .append("path")
                    .attr("id", d => `PepyFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag4+adaptXforSpecie},${posYDiag2+adaptY2})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspecePepy = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataPeppy)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `PepyFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4+adaptXforSpecie},${posYDiag2+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsComptePepy = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataPeppy)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + PeppySignCompte) 
                    .attr("id", d => `PepyFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4+adaptXforSpecie},${posYDiag2_2+adaptY2}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        //Diagramme circulaire selon :  SIGNE - SMUG - ESPECE    
        const TitreSmug = MonEspaceSVG.append('text')
            .text("Smug") 
            .attr("id", `TitreSmug`)
            .attr('x', posXDiag4-30)
            .attr('y', posYDiag3-102+adaptY2+adaptYforSpecie+adaptYforSpecie)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)
  
            let SignEspeceSmugArray = Array.from(SignEspeceSmug)
            SignEspeceSmugArray.sort(d3.ascending)
            let pieDataSmug = pie(SignEspeceSmugArray)  
            let SmugSignCompte = 0
            applyIDcorrectely(pieDataSmug)
            for (let i = 0; i < pieDataSmug.length; i++) {
                SmugSignCompte += pieDataSmug[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataSmug)
                    .enter()
                    .append("path")
                    .attr("id", d => `SmugFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag4},${posYDiag3+adaptY2+adaptYforSpecie+adaptYforSpecie})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceSmug = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataSmug)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `SmugFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4},${posYDiag3+adaptY2+adaptYforSpecie+adaptYforSpecie}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteSmug = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataSmug)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + SmugSignCompte) 
                    .attr("id", d => `SmugFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4},${posYDiag3_2+adaptY2+adaptYforSpecie+adaptYforSpecie}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

        //Diagramme circulaire selon :  SIGNE - SNOOTY - ESPECE
        const TitreSnooty = MonEspaceSVG.append('text')
            .text("Snooty") 
            .attr("id", `TitreSnooty`)
            .attr('x', posXDiag4-30)
            .attr('y', posYDiag4-102+adaptY2+adaptYforSpecie+adaptYforSpecie)
            .attr('fill', "white")
            .attr('opacity', "0")
            .attr('font-size', "25")
            .attr('font-family', "AnimalCrossing")
            .attr("opacity", 0)
            .transition()
                .duration(1050) 
                .attr("opacity", 0.5)   

            let SignEspeceSnootyArray = Array.from(SignEspeceSnooty)
            SignEspeceSnootyArray.sort(d3.ascending)
            let pieDataSnooty = pie(SignEspeceSnootyArray)  
            let SnnotySignCompte = 0
            applyIDcorrectely(pieDataSnooty)
            for (let i = 0; i < pieDataSnooty.length; i++) {
                SnnotySignCompte += pieDataSnooty[i].value 
                }

                MonEspaceSVG.selectAll("arc")
                    .data(pieDataSnooty)
                    .enter()
                    .append("path")
                    .attr("id", d => `SnootyFromage${d.index}`)
                    .attr("d", arcGenerator)
                    .attr("fill", (d, i) => color(i))
                    .attr("stroke", "white")
                    .attr("stroke-width", 1)
                    .attr("transform", `translate(${posXDiag4},${posYDiag4+adaptY2+adaptYforSpecie+adaptYforSpecie})`)
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                const labelsEspeceSnooty = MonEspaceSVG.selectAll(".label-espece")
                    .data(pieDataSnooty)
                    .enter()
                    .append("text")
                    .text((d) =>  d.data[0]) 
                    .attr("id", d => `SnootyFromageText1${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4},${posYDiag4+adaptY2+adaptYforSpecie+adaptYforSpecie}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8) 

                const labelsCompteSnooty = MonEspaceSVG.selectAll(".label-Compte")
                    .data(pieDataSnooty)
                    .enter()
                    .append("text")
                    .text((d) =>  d.value + "/" + SnnotySignCompte) 
                    .attr("id", d => `SnootyFromageText2${d.index}`)
                    .attr("transform", (d) => `translate(${posXDiag4},${posYDiag4_2+adaptY2+adaptYforSpecie+adaptYforSpecie}) translate(${arcGenerator.centroid(d)})`)
                    .attr('fill', "white")
                    .attr('font-family', "AnimalCrossing")
                    .style("text-anchor", "middle") 
                    .style("font-size", "13px")
                    .attr("opacity", 0)
                    .transition()
                        .duration(1050) 
                        .attr("opacity", 0.8)

                function applyColorsToFromages(signEspeceArray, prefix) {
                    for (let a = 0; a < signEspeceArray.length; a++) {
                        for (let c = 0; c < CouleurETEspeceListe.length; c++) {
                            if (signEspeceArray[a][0] == CouleurETEspeceListe[c][0]) {
                                let carambert = document.getElementById(`${prefix}Fromage${a}`);
                                carambert.style.fill = CouleurETEspeceListe[c][1];
                            }
                        }
                    }
                }
                applyColorsToFromages(SignEspeceSnootyArray, 'Snooty');
                applyColorsToFromages(SignEspeceSmugArray, 'Smug');
                applyColorsToFromages(SignEspecePepyArray, 'Pepy');
                applyColorsToFromages(SignEspeceNormalArray, 'Normal');
                applyColorsToFromages(SignEspeceLazyArray, 'Lazy');
                applyColorsToFromages(SignEspeceJockArray, 'Jock');
                applyColorsToFromages(SignEspeceCrankyArray, 'Cranky');
                applyColorsToFromages(SignEspeceBigSisterArray, 'BigSister');
                applyColorsToFromages(SignEspeceEducationArray, 'Education');
                applyColorsToFromages(SignEspeceFashionArray, 'Fashion');
                applyColorsToFromages(SignEspeceFitnessArray, 'Fitness');
                applyColorsToFromages(SignEspeceMusicArray, 'Music');
                applyColorsToFromages(SignEspeceNatureArray, 'Nature');
                applyColorsToFromages(SignEspecePlayArray, 'Play');
    })
   // Fond blanc pour le texte d'explication 
    let FondBlancTexteExpSpecies = MonEspaceSVG.append("rect")
    .attr("id", "FondBlancTexteExpSpecies")
    .attr("x", 30)
    .attr("y", 670)
    .attr("width", 670)
    .attr("height", 30)
    .transition()
    .duration(1000) 
    .style('fill','white')
    .style('stroke','#4B4B6E')
    .style('stroke-width','3')
    .attr("rx", 8)
    .attr("ry", 8)
    .attr("opacity", 0.5)
     // texte d'explication 
 const texteExpSpecies = MonEspaceSVG.append('text')
    .text("You can see the species of the characters according to their astrological sign.") 
    .attr("id", "texteExpSpecies")
    .attr('x', 40)
    .attr('y', 690)
    .attr('fill', "black")
    .attr('opacity', "0")
    .attr('font-size', "20")
    .attr('font-family', "AnimalCrossing")
    .attr("opacity", 0)
    .transition()
        .duration(1050) 
        .attr("opacity", 0.5) 
}
